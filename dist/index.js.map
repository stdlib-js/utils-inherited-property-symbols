{
  "version": 3,
  "sources": ["../lib/main.js", "../lib/index.js"],
  "sourcesContent": ["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar MAX_SAFE_INTEGER = require( '@stdlib/constants-float64-max-safe-integer' );\nvar isPositiveInteger = require( '@stdlib/assert-is-positive-integer' ).isPrimitive;\nvar propertySymbols = require( '@stdlib/utils-property-symbols' );\nvar getPrototypeOf = require( '@stdlib/utils-get-prototype-of' );\nvar format = require( '@stdlib/string-format' );\n\n\n// FUNCTIONS //\n\n/**\n* Returns a boolean indicating if an array contains a provided value.\n*\n* @private\n* @param {Array} arr - array\n* @param {*} v - search value\n* @returns {boolean} boolean indicating if an array contains a search value\n*/\nfunction contains( arr, v ) {\n\tvar i;\n\tfor ( i = 0; i < arr.length; i++ ) {\n\t\tif ( arr[ i ] === v ) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\n\n// MAIN //\n\n/**\n* Returns an array of an object's inherited symbol properties.\n*\n* @param {*} value - input object\n* @param {PositiveInteger} [level] - inheritance level\n* @throws {TypeError} second argument must be a positive integer\n* @returns {Array} a list of inherited symbol properties\n*\n* @example\n* var symbols = inheritedPropertySymbols( [] );\n*/\nfunction inheritedPropertySymbols( value, level ) {\n\tvar out;\n\tvar obj;\n\tvar tmp;\n\tvar N;\n\tvar n;\n\tvar i;\n\n\tif ( arguments.length > 1 ) {\n\t\tif ( !isPositiveInteger( level ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a positive integer. Value: `%s`.', level ) );\n\t\t}\n\t\tN = level;\n\t} else {\n\t\tN = MAX_SAFE_INTEGER;\n\t}\n\tif ( value === null || value === void 0 ) {\n\t\treturn [];\n\t}\n\t// Get the value's prototype:\n\tobj = getPrototypeOf( value );\n\n\t// Walk the prototype chain collecting all symbol properties...\n\tout = [];\n\tn = 1;\n\twhile ( obj && n <= N ) {\n\t\ttmp = propertySymbols( obj );\n\t\tfor ( i = 0; i < tmp.length; i++ ) {\n\t\t\tif ( contains( out, tmp[ i ] ) === false ) {\n\t\t\t\tout.push( tmp[ i ] );\n\t\t\t}\n\t\t}\n\t\tobj = getPrototypeOf( obj );\n\t\tn += 1;\n\t}\n\n\treturn out;\n}\n\n\n// EXPORTS //\n\nmodule.exports = inheritedPropertySymbols;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return an array of an object's inherited symbol properties.\n*\n* @module @stdlib/utils-inherited-property-symbols\n*\n* @example\n* var inheritedPropertySymbols = require( '@stdlib/utils-inherited-property-symbols' );\n*\n* var symbols = inheritedPropertySymbols( [] );\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n"],
  "mappings": "uGAAA,IAAAA,EAAAC,EAAA,SAAAC,EAAAC,EAAA,cAsBA,IAAIC,EAAmB,QAAS,4CAA6C,EACzEC,EAAoB,QAAS,oCAAqC,EAAE,YACpEC,EAAkB,QAAS,gCAAiC,EAC5DC,EAAiB,QAAS,gCAAiC,EAC3DC,EAAS,QAAS,uBAAwB,EAa9C,SAASC,EAAUC,EAAKC,EAAI,CAC3B,IAAIC,EACJ,IAAMA,EAAI,EAAGA,EAAIF,EAAI,OAAQE,IAC5B,GAAKF,EAAKE,CAAE,IAAMD,EACjB,MAAO,GAGT,MAAO,EACR,CAgBA,SAASE,EAA0BC,EAAOC,EAAQ,CACjD,IAAIC,EACAC,EACAC,EACAC,EACAC,EACAR,EAEJ,GAAK,UAAU,OAAS,EAAI,CAC3B,GAAK,CAACP,EAAmBU,CAAM,EAC9B,MAAM,IAAI,UAAWP,EAAQ,6EAA8EO,CAAM,CAAE,EAEpHI,EAAIJ,CACL,MACCI,EAAIf,EAEL,GAAKU,GAAU,KACd,MAAO,CAAC,EAQT,IALAG,EAAMV,EAAgBO,CAAM,EAG5BE,EAAM,CAAC,EACPI,EAAI,EACIH,GAAOG,GAAKD,GAAI,CAEvB,IADAD,EAAMZ,EAAiBW,CAAI,EACrBL,EAAI,EAAGA,EAAIM,EAAI,OAAQN,IACvBH,EAAUO,EAAKE,EAAKN,CAAE,CAAE,IAAM,IAClCI,EAAI,KAAME,EAAKN,CAAE,CAAE,EAGrBK,EAAMV,EAAgBU,CAAI,EAC1BG,GAAK,CACN,CAEA,OAAOJ,CACR,CAKAb,EAAO,QAAUU,ICxEjB,IAAIQ,EAAO,IAKX,OAAO,QAAUA",
  "names": ["require_main", "__commonJSMin", "exports", "module", "MAX_SAFE_INTEGER", "isPositiveInteger", "propertySymbols", "getPrototypeOf", "format", "contains", "arr", "v", "i", "inheritedPropertySymbols", "value", "level", "out", "obj", "tmp", "N", "n", "main"]
}
